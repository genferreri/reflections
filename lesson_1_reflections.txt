How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was helpful although it was kind of hard to find the bug

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It is easier to track changes hence to find a line a thoughts. You can do this on googleDocs and even wikipedia.
    I can undo somethings and not start from scratch.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pro, I am the one handling the timing. I commit under my own comments.
    cons, sometimes I decide to skip some changes. That would lead to a lack of knowledge 
    of how I have reached that point in the programming process. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

   Git is more aimed to do programing whereas Google Docs is not.

How can you use the commands git log and git diff to view the history of files?

    'log' will tell you the ID numbers and the comment. Then you pick the IDs that you 
    want to compare and evaluate their differences by using 'diff ID1 ID2' 

How might using version control make you more confident to make changes that
could break something?

    If I have a track then I can undo whatever I have done.

Now that you have your workspace set up, what do you want to try using Git for?

    To track changes on a pipeline that we need to transfer from one cluster to another.